<!--
    (c) Copyright Cory Plotts.
    This source is subject to the Microsoft Public License (Ms-PL).
    Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
    All other rights reserved.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Snoop.Controls"
                    xmlns:converters="clr-namespace:Snoop.Converters"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:infrastructure="clr-namespace:Snoop.Infrastructure"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:snoop="clr-namespace:Snoop"
                    xmlns:valueEditors="clr-namespace:Snoop.Controls.ValueEditors"
                    mc:Ignorable="options d">

    <Style TargetType="{x:Type valueEditors:MouseWheelValueEditor}">
        <Setter Property="DockPanel.Dock" Value="Right" />
        <Setter Property="Margin" Value="5 0 0 0" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="Scroll mouse wheel here to edit value" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}" Value="True" />
                    <Condition Binding="{Binding CanEdit}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type valueEditors:StandardValueEditor}">
        <Style.Resources>
            <DataTemplate x:Key="EmptyValueTemplate"
                          DataType="valueEditors:ValueEditor">
                <TextBlock Text="{Binding DescriptiveValue}"
                           TextTrimming="CharacterEllipsis" />
            </DataTemplate>

            <DataTemplate x:Key="UnselectedValueTemplate"
                          DataType="valueEditors:ValueEditor">
                <TextBlock Text="{Binding DescriptiveValue}"
                           TextTrimming="CharacterEllipsis" />
            </DataTemplate>

            <DataTemplate x:Key="SelectedValueTemplate"
                          DataType="valueEditors:StandardValueEditor">
                <controls:EditTextBox Height="Auto"
                                      Padding="1"
                                      HorizontalAlignment="Stretch"
                                      VerticalContentAlignment="Center"
                                      BorderThickness="0"
                                      IsReadOnly="{Binding IsEditable, Converter={x:Static converters:InvertBoolConverter.DefaultInstance}}"
                                      IsReadOnlyCaretVisible="True"
                                      Text="{Binding StringValue}" />
            </DataTemplate>
        </Style.Resources>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type valueEditors:StandardValueEditor}">
                    <DockPanel LastChildFill="True">
                        <Button x:Name="OpenDetailsEditor"
                                Command="{x:Static valueEditors:ValueEditor.OpenDetailsEditorCommand}"
                                Content=" ... "
                                DockPanel.Dock="Left"
                                Visibility="Collapsed">
                            <Button.ToolTip>
                                <TextBlock>
                                    Opens an editor window where you can see and edit the full value.<LineBreak />
                                    Editing is only possible if the property is not read only.</TextBlock>
                            </Button.ToolTip>
                        </Button>

                        <ContentPresenter Name="ValueHolder"
                                          MinHeight="18"
                                          Content="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                          ContentTemplate="{DynamicResource UnselectedValueTemplate}">
                            <ContentPresenter.ToolTip>
                                <TextBlock Text="{TemplateBinding DescriptiveValue}" />
                            </ContentPresenter.ToolTip>
                        </ContentPresenter>
                    </DockPanel>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Value}" Value="{x:Null}">
                            <Setter TargetName="ValueHolder" Property="ContentTemplate" Value="{DynamicResource EmptyValueTemplate}" />
                        </DataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ValueHolder" Property="ContentTemplate" Value="{DynamicResource SelectedValueTemplate}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="SupportsDetailsEditor" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="OpenDetailsEditor" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type valueEditors:BoolValueEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type valueEditors:BoolValueEditor}">
                    <DockPanel d:DataContext="{d:DesignInstance infrastructure:PropertyInformation,
                                                                IsDesignTimeCreatable=False}"
                               LastChildFill="True">
                        <CheckBox x:Name="PART_CheckBox"
                                  VerticalAlignment="Center"
                                  IsChecked="{Binding Value, Mode=TwoWay}"
                                  IsEnabled="{TemplateBinding IsEditable}"
                                  IsThreeState="{Binding IsNullableValueType}" />
                        <TextBlock Margin="3 0"
                                   VerticalAlignment="Center"
                                   Text="{Binding Path=DescriptiveValue}"
                                   TextTrimming="CharacterEllipsis"
                                   Visibility="{Binding Path=IsExpression, Converter={x:Static converters:BoolToVisibilityConverter.DefaultInstance}}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type valueEditors:StringValueEditor}"
           BasedOn="{StaticResource {x:Type valueEditors:StandardValueEditor}}">
        <Style.Setters>
            <Setter Property="DetailsEditorTemplate">
                <Setter.Value>
                    <DataTemplate DataType="valueEditors:StringValueEditor">
                        <TextBox AcceptsReturn="True"
                                 HorizontalScrollBarVisibility="Disabled"
                                 IsReadOnly="{Binding IsEditable, Converter={x:Static converters:InvertBoolConverter.DefaultInstance}}"
                                 IsReadOnlyCaretVisible="True"
                                 Text="{Binding StringValueForDetailsEditor}"
                                 TextWrapping="Wrap"
                                 VerticalScrollBarVisibility="Visible" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style TargetType="{x:Type valueEditors:BrushValueEditor}"
           BasedOn="{StaticResource {x:Type valueEditors:StandardValueEditor}}">
        <Style.Resources>
            <DrawingBrush x:Key="CheckerboardBrush"
                          Stretch="Fill"
                          TileMode="Tile"
                          Viewport="0,0,16,16"
                          ViewportUnits="Absolute"
                          options:Freeze="True">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="White"
                                         Geometry="M 0,0 L 2,0 2,2 0,2 Z" />
                        <GeometryDrawing Brush="LightGray"
                                         Geometry="M 0,0 L 1,0 1,2 2,2 2,1 0,1 Z" />
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>

            <DataTemplate x:Key="UnselectedValueTemplate"
                          DataType="valueEditors:ValueEditor">
                <DockPanel LastChildFill="True">
                    <DockPanel.ToolTip>
                        <ToolTip>
                            <ListBox Width="200"
                                     Height="200"
                                     ItemsSource="{Binding Value, Converter={x:Static converters:BrushStopsConverter.DefaultInstance}}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="converters:BrushStop">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="40" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0"
                                                       Margin="4"
                                                       Foreground="{DynamicResource Snoop.Brushes.Default.Foreground}"
                                                       Text="{Binding Offset}" />
                                            <TextBlock Grid.Column="1"
                                                       Margin="4"
                                                       Foreground="{DynamicResource Snoop.Brushes.Default.Foreground}"
                                                       Text="{Binding ColorText}" />
                                            <Border Grid.Column="2"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    BorderBrush="{DynamicResource Snoop.Brushes.Default.ControlDark}"
                                                    BorderThickness="1">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{Binding Color}" />
                                                </Border.Background>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ListBox>
                        </ToolTip>
                    </DockPanel.ToolTip>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24" />
                        </Grid.ColumnDefinitions>

                        <Rectangle Grid.Column="0"
                                   Fill="{StaticResource CheckerboardBrush}" />
                        <Rectangle Grid.Column="0"
                                   Fill="{Binding Value}"
                                   Stroke="{TemplateBinding TextElement.Foreground}"
                                   StrokeThickness="1" />
                    </Grid>

                    <TextBlock Margin="5 0 0 0"
                               Text="{Binding DescriptiveValue}"
                               TextTrimming="CharacterEllipsis" />
                </DockPanel>
            </DataTemplate>

            <DataTemplate x:Key="SelectedValueTemplate"
                          DataType="valueEditors:BrushValueEditor">
                <Grid Height="Auto"
                      HorizontalAlignment="Left">
                    <Grid.ToolTip>
                        <ToolTip>
                            <ListBox Width="200"
                                     Height="200"
                                     ItemsSource="{Binding Value, Converter={x:Static converters:BrushStopsConverter.DefaultInstance}}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="converters:BrushStop">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="40" />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0"
                                                       Margin="4"
                                                       Foreground="{DynamicResource Snoop.Brushes.Default.Foreground}"
                                                       Text="{Binding Offset}" />
                                            <TextBlock Grid.Column="1"
                                                       Margin="4"
                                                       Foreground="{DynamicResource Snoop.Brushes.Default.Foreground}"
                                                       Text="{Binding ColorText}" />
                                            <Border Grid.Column="2"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    BorderBrush="{DynamicResource Snoop.Brushes.Default.ControlDark}"
                                                    BorderThickness="1">
                                                <Border.Background>
                                                    <SolidColorBrush Color="{Binding Color}" />
                                                </Border.Background>
                                            </Border>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ListBox>
                        </ToolTip>
                    </Grid.ToolTip>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="24" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Rectangle Grid.Column="0"
                               Fill="{StaticResource CheckerboardBrush}" />
                    <Rectangle Grid.Column="0"
                               Fill="{Binding Value}"
                               Stroke="{TemplateBinding TextElement.Foreground}"
                               StrokeThickness="1" />

                    <controls:EditTextBox Grid.Column="1"
                                          Margin="3 0 0 0"
                                          HorizontalAlignment="Stretch"
                                          VerticalContentAlignment="Center"
                                          BorderThickness="0"
                                          IsReadOnly="{Binding IsEditable, Converter={x:Static converters:InvertBoolConverter.DefaultInstance}}"
                                          IsReadOnlyCaretVisible="True"
                                          Text="{Binding StringValue}" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="EmptyValueTemplate" />
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type valueEditors:ColorValueEditor}"
           BasedOn="{StaticResource {x:Type valueEditors:StandardValueEditor}}">
        <Style.Resources>
            <DrawingBrush x:Key="CheckerboardBrush"
                          Stretch="Fill"
                          TileMode="Tile"
                          Viewport="0,0,16,16"
                          ViewportUnits="Absolute"
                          options:Freeze="True">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="White"
                                         Geometry="M 0,0 L 2,0 2,2 0,2 Z" />
                        <GeometryDrawing Brush="LightGray"
                                         Geometry="M 0,0 L 1,0 1,2 2,2 2,1 0,1 Z" />
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>

            <DataTemplate x:Key="UnselectedValueTemplate"
                          DataType="valueEditors:ValueEditor">
                <Grid Height="Auto"
                      HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Rectangle Grid.Column="0"
                               Fill="{StaticResource CheckerboardBrush}" />
                    <Rectangle Grid.Column="0"
                               Stroke="{TemplateBinding TextElement.Foreground}"
                               StrokeThickness="1">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding Value}" />
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBlock Grid.Column="1"
                               Margin="5 0 0 0"
                               Text="{Binding DescriptiveValue}"
                               TextTrimming="CharacterEllipsis" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="SelectedValueTemplate"
                          DataType="valueEditors:BrushValueEditor">
                <Grid Height="Auto"
                      HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="24" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Rectangle Grid.Column="0"
                               Fill="{StaticResource CheckerboardBrush}" />
                    <Rectangle Grid.Column="0"
                               Stroke="{TemplateBinding TextElement.Foreground}"
                               StrokeThickness="1">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="{Binding Value}" />
                        </Rectangle.Fill>
                    </Rectangle>

                    <controls:EditTextBox Grid.Column="1"
                                          Height="Auto"
                                          Padding="1"
                                          HorizontalAlignment="Stretch"
                                          VerticalContentAlignment="Center"
                                          BorderThickness="0"
                                          IsReadOnly="{Binding IsEditable, Converter={x:Static converters:InvertBoolConverter.DefaultInstance}}"
                                          IsReadOnlyCaretVisible="True"
                                          Text="{Binding StringValue}" />
                </Grid>
            </DataTemplate>

            <DataTemplate x:Key="EmptyValueTemplate" />
        </Style.Resources>
    </Style>

    <Style TargetType="{x:Type valueEditors:EnumValueEditor}">
        <Style.Resources>
            <DataTemplate x:Key="UnselectedValueTemplate"
                          DataType="valueEditors:ValueEditor">
                <TextBlock Text="{Binding DescriptiveValue}"
                           TextTrimming="CharacterEllipsis" />
            </DataTemplate>

            <DataTemplate x:Key="SelectedValueTemplate"
                          DataType="valueEditors:EnumValueEditor">
                <ComboBox Padding="2 -2 2 0"
                          DisplayMemberPath="Text"
                          IsReadOnly="{Binding IsEditable, Converter={x:Static converters:InvertBoolConverter.DefaultInstance}}"
                          IsSynchronizedWithCurrentItem="False"
                          ItemsSource="{Binding Values}"
                          SelectedValue="{Binding Value}"
                          SelectedValuePath="Value" />
            </DataTemplate>
        </Style.Resources>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type valueEditors:EnumValueEditor}">
                    <ContentPresenter Name="ValueHolder"
                                      MinHeight="18"
                                      Content="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      ContentTemplate="{DynamicResource UnselectedValueTemplate}" />

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsEditable" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ValueHolder" Property="ContentTemplate" Value="{DynamicResource SelectedValueTemplate}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <valueEditors:ValueEditorTemplateSelector x:Key="EditorSelector">
        <valueEditors:ValueEditorTemplateSelector.StandardTemplate>
            <DataTemplate DataType="infrastructure:PropertyInformation">
                <DockPanel>
                    <!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
                    <valueEditors:MouseWheelValueEditor />

                    <valueEditors:StandardValueEditor DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                      IsEditable="{Binding CanEdit}"
                                                      IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                      PropertyInfo="{Binding}"
                                                      PropertyType="{Binding PropertyType}"
                                                      Value="{Binding Value, Mode=TwoWay}" />

                    <!-- to allow ValueEditor to live on the left and not stretch -->
                    <Border />
                </DockPanel>
            </DataTemplate>
        </valueEditors:ValueEditorTemplateSelector.StandardTemplate>

        <valueEditors:ValueEditorTemplateSelector.EnumTemplate>
            <DataTemplate DataType="infrastructure:PropertyInformation">
                <DockPanel>
                    <!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
                    <valueEditors:MouseWheelValueEditor />

                    <valueEditors:EnumValueEditor DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                  IsEditable="{Binding CanEdit}"
                                                  IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                  PropertyInfo="{Binding}"
                                                  PropertyType="{Binding PropertyType}"
                                                  Value="{Binding Value, Mode=TwoWay}" />

                    <!-- to allow ValueEditor to live on the left and not stretch -->
                    <Border />
                </DockPanel>
            </DataTemplate>
        </valueEditors:ValueEditorTemplateSelector.EnumTemplate>

        <valueEditors:ValueEditorTemplateSelector.BoolTemplate>
            <DataTemplate DataType="infrastructure:PropertyInformation">
                <DockPanel>
                    <!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
                    <valueEditors:MouseWheelValueEditor />

                    <valueEditors:BoolValueEditor DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                  IsEditable="{Binding CanEdit}"
                                                  IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                  PropertyInfo="{Binding}"
                                                  PropertyType="{Binding PropertyType}"
                                                  Value="{Binding Value, Mode=TwoWay}" />

                    <!-- to allow ValueEditor to live on the left and not stretch -->
                    <Border />
                </DockPanel>
            </DataTemplate>
        </valueEditors:ValueEditorTemplateSelector.BoolTemplate>

        <valueEditors:ValueEditorTemplateSelector.StringTemplate>
            <DataTemplate DataType="infrastructure:PropertyInformation">
                <DockPanel>
                    <valueEditors:StringValueEditor DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                    IsEditable="{Binding CanEdit}"
                                                    IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                    PropertyInfo="{Binding}"
                                                    PropertyType="{Binding PropertyType}"
                                                    Value="{Binding Value, Mode=TwoWay}" />

                    <!-- to allow ValueEditor to live on the left and not stretch -->
                    <Border />
                </DockPanel>
            </DataTemplate>
        </valueEditors:ValueEditorTemplateSelector.StringTemplate>

        <valueEditors:ValueEditorTemplateSelector.BrushTemplate>
            <DataTemplate DataType="infrastructure:PropertyInformation">
                <DockPanel>
                    <!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
                    <valueEditors:MouseWheelValueEditor />

                    <valueEditors:BrushValueEditor DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                   IsEditable="{Binding CanEdit}"
                                                   IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                   PropertyInfo="{Binding}"
                                                   PropertyType="{Binding PropertyType}"
                                                   Value="{Binding Value, Mode=TwoWay}" />

                    <!-- to allow ValueEditor to live on the left and not stretch -->
                    <Border />
                </DockPanel>
            </DataTemplate>
        </valueEditors:ValueEditorTemplateSelector.BrushTemplate>

        <valueEditors:ValueEditorTemplateSelector.ColorTemplate>
            <DataTemplate DataType="infrastructure:PropertyInformation">
                <DockPanel>
                    <!-- add mouse wheel editor to right of value (only visible when IsSelected and CanEdit) -->
                    <valueEditors:MouseWheelValueEditor />

                    <valueEditors:ColorValueEditor DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                   IsEditable="{Binding CanEdit}"
                                                   IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                   PropertyInfo="{Binding}"
                                                   PropertyType="{Binding PropertyType}"
                                                   Value="{Binding Value, Mode=TwoWay}" />

                    <!-- to allow ValueEditor to live on the left and not stretch -->
                    <Border />
                </DockPanel>
            </DataTemplate>
        </valueEditors:ValueEditorTemplateSelector.ColorTemplate>

        <valueEditors:ValueEditorTemplateSelector.WithResourceKeyTemplate>
            <DataTemplate DataType="infrastructure:PropertyInformation">
                <DockPanel>
                    <valueEditors:StandardValueEditor DescriptiveValue="{Binding DescriptiveValue, Mode=OneWay}"
                                                      IsEditable="False"
                                                      IsSelected="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"
                                                      PropertyInfo="{Binding}"
                                                      PropertyType="{Binding PropertyType}"
                                                      Value="{Binding ResourceKey, Mode=OneWay}" />

                    <!-- to allow ValueEditor to live on the left and not stretch -->
                    <Border />
                </DockPanel>
            </DataTemplate>
        </valueEditors:ValueEditorTemplateSelector.WithResourceKeyTemplate>
    </valueEditors:ValueEditorTemplateSelector>
</ResourceDictionary>