<!--
    (c) Copyright Cory Plotts.
    This source is subject to the Microsoft Public License (Ms-PL).
    Please see http://go.microsoft.com/fwlink/?LinkID=131993 for details.
    All other rights reserved.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Snoop.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    mc:Ignorable="options d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Snoop.Core;component/Icons.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Snoop.Core;component/BaseStyles.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Snoop.Core;component/Controls/ValueEditors/MouseWheelValueEditorTemplates.xaml" />
        <ResourceDictionary Source="pack://application:,,,/Snoop.Core;component/Controls/ValueEditors/EditorTemplates.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Rectangle}" />

    <Style x:Key="Snoop.Styles.ProperTreeView"
           TargetType="TreeView"
           BasedOn="{StaticResource Snoop.Styles.TreeView}" />

    <Style x:Key="{x:Type TreeView}"
           TargetType="TreeView"
           BasedOn="{StaticResource Snoop.Styles.TreeView}" />

    <!-- This is the area which contains the selected item in the ComboBox -->

    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="{x:Type TextBox}">
        <!-- This must be named as PART_ContentHost -->
        <Border x:Name="PART_ContentHost"
                Background="{TemplateBinding Background}"
                Focusable="False" />
    </ControlTemplate>

    <ControlTemplate x:Key="Snoop.Templates.NoSelectionComboBox"
                     TargetType="{x:Type controls:NoSelectionComboBox}">
        <Grid x:Name="Grid">
            <Border x:Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
                <ToggleButton x:Name="ToggleButton"
                              ClickMode="Press"
                              Focusable="False"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                    <ToggleButton.Content>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{TemplateBinding Header}" />
                            <Image Width="8"
                                   Height="6"
                                   Margin="3 0 0 0"
                                   Source="{DynamicResource downDrawingImage}" />
                        </StackPanel>
                    </ToggleButton.Content>
                </ToggleButton>
            </Border>

            <Popup x:Name="PART_Popup"
                   AllowsTransparency="True"
                   Focusable="False"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent, AncestorType={x:Null}}}"
                   Placement="Bottom"
                   PopupAnimation="Slide">
                <Grid x:Name="DropDown"
                      MinWidth="{TemplateBinding ActualWidth}"
                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border x:Name="DropDownBorder"
                            Background="{DynamicResource Snoop.Brushes.Default.Background}"
                            BorderBrush="{DynamicResource Snoop.Brushes.Window.Frame}"
                            BorderThickness="1 1 1 1" />
                    <Grid Margin="1 1 1 1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Button Grid.Row="0"
                                Command="{TemplateBinding ResetSettingsCommand}">
                            <TextBlock>
                                Reset to default settings
                            </TextBlock>
                            <Button.ToolTip>
                                <TextBlock Text="{TemplateBinding ResetSettingsToolTip}" />
                            </Button.ToolTip>
                        </Button>

                        <ScrollViewer x:Name="ScrollViewer"
                                      Grid.Row="1"
                                      Margin="0 2 0 0">
                            <ItemsControl x:Name="PART_ItemsControl"
                                          ItemsPanel="{TemplateBinding ItemsPanel}"
                                          ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}}"
                                          KeyboardNavigation.DirectionalNavigation="Contained">
                                <!--<ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>-->
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </Grid>
            </Popup>
        </Grid>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                    <Condition Property="IsDropDownOpen" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Snoop.Brushes.Default.HighlightForeground}" />
            </MultiTrigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
                <Setter TargetName="DropDown" Property="Margin" Value="0 0 3 3" />
                <Setter TargetName="DropDown" Property="SnapsToDevicePixels" Value="True" />
                <Setter TargetName="DropDownBorder" Property="BitmapEffect">
                    <Setter.Value>
                        <DropShadowBitmapEffect ShadowDepth="1.5"
                                                Softness="0.15" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource Snoop.Brushes.Default.Control}" />
                <Setter Property="Foreground" Value="{DynamicResource Snoop.Brushes.Default.GrayForeground}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="150" />
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type controls:NoSelectionComboBox}"
           TargetType="{x:Type controls:NoSelectionComboBox}"
           BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template" Value="{StaticResource Snoop.Templates.NoSelectionComboBox}" />
    </Style>

    <Style x:Key="{x:Type controls:NoFocusHyperlink}"
           TargetType="{x:Type controls:NoFocusHyperlink}"
           BasedOn="{StaticResource {x:Type Hyperlink}}" />

    <!-- TreeView -->
    <controls:IndentToMarginConverter x:Key="IndentToMarginConverter" />

    <Style x:Key="TreeViewToggleStyle"
           TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="13" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"
                            Width="19"
                            Height="13"
                            Background="#00FFFFFF">
                        <Border x:Name="Border1"
                                Width="9"
                                Height="9"
                                BorderBrush="#FF9495A2"
                                BorderThickness="1 1 1 1"
                                CornerRadius="1,1,1,1"
                                SnapsToDevicePixels="True">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                    <GradientStop Color="#FFFFFFFF" Offset="0.4" />
                                    <GradientStop Color="#FFC6CEDA" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Path x:Name="ExpandPath"
                                  Margin="1 1 1 1"
                                  Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z"
                                  Fill="#FF000000" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="Data" Value="M0,2L0,3 5,3 5,2z" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="19" />
    </Style>

    <Style x:Key="ProperTreeViewItemStyle"
           TargetType="{x:Type TreeViewItem}"
           BasedOn="{StaticResource TreeViewItemStyle}">
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}, AncestorLevel=1}, FallbackValue=Left}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="1 0 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid x:Name="Grid">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border x:Name="PART_Header"
                                Grid.Column="1"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <StackPanel Margin="{Binding Indent, Converter={StaticResource IndentToMarginConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:ProperTreeViewItem}}}"
                                        Orientation="Horizontal">
                                <ToggleButton x:Name="Expander"
                                              Style="{StaticResource TreeViewToggleStyle}"
                                              ClickMode="Press"
                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Content="{TemplateBinding Header}"
                                                  ContentSource="Header"
                                                  ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                                  DataContext="{x:Null}" />
                            </StackPanel>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="False" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="False" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource Snoop.Brushes.Default.HighlightForeground}" />
                            <Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource Snoop.Brushes.Default.Highlight}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource Snoop.Brushes.Default.Foreground}" />
                            <Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource Snoop.Brushes.Default.Control}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource Snoop.Brushes.Default.GrayForeground}" />
                        </Trigger>
                        <Trigger SourceName="PART_Header" Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_Header" Property="BorderBrush" Value="{DynamicResource Item.MouseOver.Border}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}, AncestorLevel=1}, FallbackValue=Top}" />
    </Style>

    <Style x:Key="MouseWheelText"
           TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <!--<Setter Property="local:PropertyEditor.SupportMouseWheel" Value="True"/>-->
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="0 0 5 0" />
    </Style>
</ResourceDictionary>